# ===== REQUIRED CONFIGURATION =====

# Your XCPFOLIO Bitcoin address
XCPFOLIO_ADDRESS=1BoTXcPiDFJgXMbydpRPDKKaqM1MbaEuSe

# Private key in WIF format for signing transactions
# NEVER commit this to version control!
XCPFOLIO_PRIVATE_KEY=your_private_key_here

# ===== NETWORK CONFIGURATION =====

# Network (mainnet or testnet)
NETWORK=mainnet

# API Endpoints
COUNTERPARTY_API=https://api.counterparty.io:4000/v2
MEMPOOL_API=https://mempool.space/api

# ===== PROCESSING CONFIGURATION =====

# Dry run mode - test without broadcasting transactions
DRY_RUN=false

# Maximum unconfirmed transactions in mempool (default: 25, hard limit: 25)
MAX_MEMPOOL_TXS=25

# Cooldown between compose calls in milliseconds (default: 10000)
# Counterparty needs time to see UTXOs in mempool
COMPOSE_COOLDOWN=10000

# Maximum pre-broadcast retry attempts (default: 10)
# Pre-broadcast failures are cheap to retry (compose/sign errors)
MAX_RETRIES=10

# Enable RBF for stuck transactions (default: true)
RBF_ENABLED=true

# Blocks before considering transaction stuck (default: 3)
# RBF will kick in after this many blocks
STUCK_TX_THRESHOLD=3

# Maximum total fee per transaction in satoshis (default: 10000 = 0.0001 BTC)
# This is a hard ceiling to prevent excessive spending during fee spikes
MAX_TOTAL_FEE_SATS=10000

# Maximum fee rate for NEW transactions in sat/vB (default: 100)
# If market rate exceeds this, we wait for lower fees
MAX_FEE_RATE_FOR_NEW_TX=100

# Cron schedule for checking orders (default: every minute)
# Examples:
# - "* * * * *" = every minute
# - "*/5 * * * *" = every 5 minutes
# - "*/10 * * * *" = every 10 minutes
CHECK_INTERVAL=* * * * *

# ===== OPTIONAL SERVICES =====

# Discord webhook for notifications
DISCORD_WEBHOOK_URL=

# Slack webhook for notifications
SLACK_WEBHOOK_URL=

# HTTP port for health check endpoint
# Access status at http://localhost:PORT/status
HEALTH_CHECK_PORT=

# Vercel KV (optional, for cloud state persistence)
KV_URL=
KV_REST_API_URL=
KV_REST_API_TOKEN=
KV_REST_API_READ_ONLY_TOKEN=

# Environment
NODE_ENV=development